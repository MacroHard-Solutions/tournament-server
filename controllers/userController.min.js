const res=require("express/lib/response"),db=require("../util/db"),CHECK_USER="CALL check_existing_user(?);";async function fetchUser(username){console.log("----------------------------Username Check------------------------------------")}exports.checkUsername=async(req,res)=>{console.log("username is "+req.body.username),await db.execute(`CALL check_existing_user(${req.body.username});`).then(([rows,fields])=>{0===rows[0][0].USER_COUNT?res.status(202).json({status:"OK",message:"You may use this username"}):res.status(409).json({status:"NOT OK",message:"There is an existing user with this username"})}).catch(err=>{console.log(err),res.status(502).json({status:"Failed",message:"Error when checking for the username's existence"})})},exports.getAllUsers=async(req,res)=>{await db.execute("SELECT * FROM `USER`;").then(([rows,fields])=>{console.log(rows),res.end()}).catch(err=>{console.log(err),res.status(502).json({status:"Failed",message:"Unable to retrieve users"})})},exports.insertUser=async(req,res)=>{const INSERT_USER=`CALL insert_user ("${req.body.userID}", "${req.body.fName}", "${req.body.lName}", \n     "${req.body.username}", "${req.body.userEmail}", "${req.body.userPass}", ${"true"===req.body.isAdmin?1:0}, ${"true"===req.body.wantsNotifications?1:0})`;await db.execute(INSERT_USER).then(result=>{res.status(201).json({status:"Successful",message:"The user has been successfully inserted"})}).catch(err=>{console.log(err),res.status(500).json({status:"Failed",message:"Unable to add new user to database"})}),dp.unprepare(INSERT_USER),db.unprepare},exports.getUser=async(req,res)=>{await db.execute()};